openapi: 3.0.0
info:
  description: This is a simple API
  version: 1.0.0-oas3
  title: Simple Inventory API
  contact:
    email: pv.safronov@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
components:
  securitySchemes:
    cookieSession:
      type: apiKey
      in: cookie
      name: LEETCODE_SESSION
    cookieCSRF:
      type: apiKey
      in: cookie
      name: csrftoken
    headerCSRF:
      type: apiKey
      in: header
      name: x-csrftoken
  schemas:
    Solution:
      required:
        - data_input
        - lang
        - question_id
        - test_mode
        - typed_code
      properties:
        data_input:
          type: string
        lang:
          type: string
        question_id:
          type: integer
        test_mode:
          type: boolean
        typed_code:
          type: string
    Interpretation:
      required:
        - interpret_id
        - test_case
      properties:
        interpret_id:
          type: string
        test_case:
          type: string
    Difficulty:
      required:
        - level
      properties:
        level:
          type: integer
    Stat:
      required:
        - question_id
        - question__title
        - question__title_slug
        - question__hide
        - total_acs
        - total_submitted
        - frontend_question_id
        - is_new_question
      properties:
        question_id:
          type: integer
        question__article__live:
          type: string
        question__article__slug:
          type: string
        question__article__has_video_solution:
          type: string
        question__title:
          type: string
        question__title_slug:
          type: string
        question__hide:
          type: boolean
        total_acs:
          type: integer
        total_submitted:
          type: integer
        frontend_question_id:
          type: integer
        is_new_question:
          type: boolean
    StatStatusPair:
      required:
        - stat
        - difficulty
        - paid_only
        - is_favor
        - frequency
        - progress
      properties:
        stat:
          $ref: '#/components/schemas/Stat'
        status:
          type: string
        difficulty:
          $ref: '#/components/schemas/Difficulty'
        paid_only:
          type: boolean
        is_favor:
          type: boolean
        frequency:
          type: number
        progress:
          type: number
    Problems:
      required:
        - user_name
        - num_solved
        - num_total
        - ac_easy
        - ac_medium
        - ac_hard
        - stat_status_pairs
        - frequency_high
        - frequency_mid
        - category_slug
      properties:
        user_name:
          type: string
        num_solved:
          type: integer
        num_total:
          type: integer
        ac_easy:
          type: integer
        ac_medium:
          type: integer
        ac_hard:
          type: integer
        stat_status_pairs:
          type: array
          items:
            $ref: '#/components/schemas/StatStatusPair'
        frequency_high:
          type: integer
        frequency_mid:
          type: integer
        category_slug:
          type: string
paths:
  /api/problems/{topic}/:
    get:
      parameters:
        - in: path
          name: topic
          required: true
          schema:
            enum: ['algorithms', 'database', 'shell', 'concurrency']
      responses:
        '200':
          description: Returns problems by topic
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problems'
  /problems/{problem}/interpret_solution/:
    post:
      parameters:
        - in: path
          name: problem
          required: true
          schema:
            type: string
            example: two-sum
        - in: header
          name: Referer
          schema:
            type: string
          required: true
      requestBody:
        description: Solution to test
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Solution'
      responses:
        '200':
          description: Returns problem test result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interpretation'

servers:
  - url: 'https://leetcode.com'
security:
  - cookieSession: []
    cookieCSRF: []
    headerCSRF: []
